
# File: k8s/backup-cronjob.yaml
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: mongodb-backup
spec:
  schedule: "0 1 * * *"  # Run daily at 1 AM
  jobTemplate:
    spec:
      template:
        spec:
          imagePullSecrets:
            - name: github-registry-secret
          containers:
          - name: backup
            image: ghcr.io/0xcryp70/my-mongodb:latest
            command:
            - /bin/sh
            - -c
            - mongodump --host mongodb --username $(MONGO_USERNAME) --password $(MONGO_PASSWORD) --out /backups/$(date +"%Y-%m-%d")
            env:
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: username
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: password
            volumeMounts:
            - name: backup-volume
              mountPath: /backups
          restartPolicy: OnFailure
          volumes:
          - name: backup-volume
            persistentVolumeClaim:
              claimName: backup-pvc

---
# File: k8s/backup-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backup-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
# File: k8s/app-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-js-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-js-app
  template:
    metadata:
      labels:
        app: my-js-app
    spec:
      imagePullSecrets:
        - name: docker-registry-secret
      containers:
      - name: my-js-app
        image: crxc0d3r/my-js-app:latest
        ports:
        - containerPort: 8080
        - containerPort: 3001
        env:
        - name: MONGO_URI
          value: mongodb://$(MONGO_USERNAME):$(MONGO_PASSWORD)@mongodb:27017/mydatabase?authSource=admin
        envFrom:
        - secretRef:
            name: mongodb-secret

---
# File: k8s/app-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-js-app
spec:
  selector:
    app: my-js-app
  ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: alt-port
      port: 3001
      targetPort: 3001

---
# File: k8s/app-test-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-js-app-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-js-app-test
  template:
    metadata:
      labels:
        app: my-js-app-test
    spec:
      imagePullSecrets:
        - name: github-registry-secret
      containers:
      - name: my-js-app-test
        image: ghcr.io/0xcryp70/my-js-app-test:latest
        ports:
        - containerPort: 8181
        - containerPort: 3000
        env:
        - name: MONGO_URI
          value: mongodb://$(MONGO_USERNAME):$(MONGO_PASSWORD)@mongodb:27017/mydatabase?authSource=admin
        envFrom:
        - secretRef:
            name: mongodb-secret

---
# File: k8s/app-test-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-js-app-test
spec:
  selector:
    app: my-js-app-test
  ports:
    - name: http
      port: 8181
      targetPort: 8181
    - name: alt-port
      port: 3000
      targetPort: 3000

---
# File: k8s/nginx-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      imagePullSecrets:
        - name: docker-registry-secret
      containers:
      - name: nginx
        image: crxc0d3r/my-nginx:latest
        ports:
        - containerPort: 80
        # Configure Nginx to expose the status
      - name: nginx-prometheus-exporter
        image: nginx/nginx-prometheus-exporter:latest
        args:
        - -nginx.scrape-uri=http://nginx-m:7777/nginx_status
        ports:
        - containerPort: 9113

---
# File: k8s/nginx-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: nginx-m
spec:
  selector:
    app: nginx-m
  ports:
    - protocol: TCP
      port: 7777
      targetPort: 7777
---
# File: k8s/mongoface-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongoface
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongoface
  template:
    metadata:
      labels:
        app: mongoface
    spec:
      containers:
      - name: mongoface
        image: samueltallet/mongodb-php-gui
        ports:
        - containerPort: 5000

---
# File: k8s/mongoface-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mongoface
spec:
  selector:
    app: mongoface
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000

---

# File: k8s/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-app-ingress
  annotations:
    nginx.ingress.kubernetes.io/router.entrypoints: "web"
spec:
  ingressClassName: "nginx"
  rules:
  - host: my-js-app.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-js-app
            port:
              number: 8080

  - host: appbeta.tonlottery.info
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx
            port:
              number: 80

  - host: app.tonlottery.info
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx
            port:
              number: 80

  - host: api.tonlottery.info
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx
            port:
              number: 80

  - host: api2.tonlottery.info
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx
            port:
              number: 80

  - host: mongoface667.tonlottery.info
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mongoface
            port:
              number: 80

  - host: jhwbed2322hba.tonlottery.info
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mongodb
            port:
              number: 27017

---

apiVersion: v1
kind: Service
metadata:
  name: nginx-prometheus-exporter
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 9113
      targetPort: 9113
